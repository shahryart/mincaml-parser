processing file `mincaml.lalrpop`
mincaml.lalrpop:40:3: 40:7: Ambiguous grammar detected

  The following symbols can be reduced in two ways:
    exp "," elems "," exp

  They could be reduced like so:
    exp "," elems  ╷ "," exp
    │       ├─exp3─┤       │
    │       └─exp──┤       │
    ├─elems────────┘       │
    └─elems────────────────┘

  Alternatively, they could be reduced like so:
    exp "," elems "," exp
    │       ├─elems─────┤
    │       ├─exp3──────┤
    │       └─exp───────┤
    └─elems─────────────┘

  LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for advice on making your grammar unambiguous.

mincaml.lalrpop:47:5: 47:34: Conflict detected

    when in this state:
  elems = exp (*) "," exp ["(", ")", ",", ";", "=", "false", "in", "let", "rec", "true", r#"([_a-z]+)([0-9a-zA-z_]*)"#, r#"\\d+"#, r#"\\d+ (\\. \\d*)? ([eE] [+-]? \\d+)?"#, EOF]
  function_def = identifier formal_args "=" exp (*) ["(", ")", ",", ";", "=", "false", "in", "let", "rec", "true", r#"([_a-z]+)([0-9a-zA-z_]*)"#, r#"\\d+"#, r#"\\d+ (\\. \\d*)? ([eE] [+-]? \\d+)?"#, EOF]

  and looking at a token `","` we can reduce to a `function_def` but we can also shift

mincaml.lalrpop:28:1: 28:3: Ambiguous grammar detected

  The following symbols can be reduced in two ways:
    exp "," exp3 ";" exp

  They could be reduced like so:
    exp "," exp3  ╷ ";" exp
    │       └─exp─┤       │
    ├─elems───────┤       │
    ├─exp3────────┘       │
    └─exp─────────────────┘

  Alternatively, they could be reduced like so:
    exp "," exp3 ";" exp
    │       └─exp──────┤
    └─elems────────────┘

  LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for advice on making your grammar unambiguous.

mincaml.lalrpop:51:5: 51:17: Ambiguous grammar detected

  The following symbols can be reduced in two ways:
    elems "," exp "," exp

  They could be reduced like so:
    elems "," exp "," exp
    ├─elems─────┤       │
    ├─exp3──────┤       │
    ├─exp───────┘       │
    └─elems─────────────┘

  Alternatively, they could be reduced like so:
    elems "," exp "," exp
    │         ├─elems───┤
    │         ├─exp3────┤
    │         └─exp─────┤
    └─elems─────────────┘

  LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for advice on making your grammar unambiguous.

mincaml.lalrpop:52:5: 52:15: Ambiguous grammar detected

  The following symbols can be reduced in two ways:
    exp "," exp "," exp

  They could be reduced like so:
    exp "," exp "," exp
    ├─elems───┤       │
    ├─exp3────┤       │
    ├─exp─────┘       │
    └─elems───────────┘

  Alternatively, they could be reduced like so:
    exp "," exp "," exp
    │       ├─elems───┤
    │       ├─exp3────┤
    │       └─exp─────┤
    └─elems───────────┘

  LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for advice on making your grammar unambiguous.

mincaml.lalrpop:43:3: 43:13: Ambiguous grammar detected

  The following symbols can be reduced in two ways:
    exp3 ";" exp "," exp

  They could be reduced like so:
    exp3 ";" exp "," exp
    ├─exp──────┘       │
    └─elems────────────┘

  Alternatively, they could be reduced like so:
    exp3 ";" exp "," exp
    │        ├─elems───┤
    │        ├─exp3────┤
    │        └─exp─────┤
    └─exp──────────────┘

  LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for advice on making your grammar unambiguous.

mincaml.lalrpop:40:3: 40:7: Ambiguous grammar detected

  The following symbols can be reduced in two ways:
    exp "," elems "," exp

  They could be reduced like so:
    exp "," elems  ╷ "," exp
    │       ├─exp3─┤       │
    │       └─exp──┤       │
    ├─elems────────┘       │
    └─elems────────────────┘

  Alternatively, they could be reduced like so:
    exp "," elems "," exp
    │       ├─elems─────┤
    │       ├─exp3──────┤
    │       └─exp───────┤
    └─elems─────────────┘

  LALRPOP does not yet support ambiguous grammars. See the LALRPOP manual for advice on making your grammar unambiguous.
